/*
 * CSCI 469
 * Project #2
 * Tan, Josh
 * 11/15/13
 */
package caesarcipher;

/**
 * The GUI frame used to demonstrate the cipher. Allows the user to specify the
 * shift size for the cipher. Also provides two tabs for performing encryption 
 * and decryption on user-supplied text.
 *
 * @author Josh Tan
 */
public class CipherFrame extends javax.swing.JFrame {

    private final Cipher caesarCipher; // cipher used for encryption

    /**
     * Creates new form CipherFrame
     */
    public CipherFrame() {
        initComponents();

        // initialize the cipher with the appropriate shift setting
        caesarCipher = new Cipher((Integer) shiftSpinner.getValue());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cipherPanel = new javax.swing.JPanel();
        shiftLabel = new javax.swing.JLabel();
        shiftSpinner = new javax.swing.JSpinner();
        cipherTitle = new javax.swing.JLabel();
        cipherTabbedPane = new javax.swing.JTabbedPane();
        encryptPanel = new javax.swing.JPanel();
        encryptCipherPanel = new javax.swing.JPanel();
        encryptCipherScrollPane = new javax.swing.JScrollPane();
        encryptCipherArea = new javax.swing.JTextArea();
        encryptPlainPanel = new javax.swing.JPanel();
        encryptPlainScrollPane = new javax.swing.JScrollPane();
        encryptPlainArea = new javax.swing.JTextArea();
        encryptEncryptButton = new javax.swing.JButton();
        encryptClearButton = new javax.swing.JButton();
        decryptPanel = new javax.swing.JPanel();
        decryptCipherPanel = new javax.swing.JPanel();
        decryptCipherScrollPane = new javax.swing.JScrollPane();
        decryptCipherArea = new javax.swing.JTextArea();
        decryptPlainPanel = new javax.swing.JPanel();
        decryptPlainScrollPane = new javax.swing.JScrollPane();
        decryptPlainArea = new javax.swing.JTextArea();
        decryptClearButton = new javax.swing.JButton();
        decryptDecryptButton = new javax.swing.JButton();
        cipherMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("A Simple Caesar Cipher");
        setName("caesarFrame"); // NOI18N
        setResizable(false);

        shiftLabel.setText("Cipher Shift:");

        shiftSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 127, 1));

        cipherTitle.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cipherTitle.setText("A Simple Caesar Cipher");

        cipherTabbedPane.setBorder(new javax.swing.border.LineBorder(javax.swing.UIManager.getDefaults().getColor("TabbedPane.selected"), 1, true));
        cipherTabbedPane.setPreferredSize(new java.awt.Dimension(501, 507));

        encryptPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        encryptCipherPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ciphertext"));
        encryptCipherPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        encryptCipherArea.setEditable(false);
        encryptCipherArea.setColumns(20);
        encryptCipherArea.setLineWrap(true);
        encryptCipherArea.setRows(5);
        encryptCipherArea.setWrapStyleWord(true);
        encryptCipherScrollPane.setViewportView(encryptCipherArea);

        encryptCipherPanel.add(encryptCipherScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 450, 130));

        encryptPanel.add(encryptCipherPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 470, 160));

        encryptPlainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Plaintext"));
        encryptPlainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        encryptPlainArea.setColumns(20);
        encryptPlainArea.setLineWrap(true);
        encryptPlainArea.setRows(5);
        encryptPlainArea.setWrapStyleWord(true);
        encryptPlainArea.setName(""); // NOI18N
        encryptPlainScrollPane.setViewportView(encryptPlainArea);

        encryptPlainPanel.add(encryptPlainScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 450, 130));

        encryptPanel.add(encryptPlainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 470, 160));

        encryptEncryptButton.setText("Encrypt");
        encryptEncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptEncryptButtonActionPerformed(evt);
            }
        });
        encryptPanel.add(encryptEncryptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        encryptClearButton.setText("Clear");
        encryptClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptClearButtonActionPerformed(evt);
            }
        });
        encryptPanel.add(encryptClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        cipherTabbedPane.addTab("Encryption", encryptPanel);

        decryptPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        decryptCipherPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ciphertext"));
        decryptCipherPanel.setPreferredSize(new java.awt.Dimension(470, 155));
        decryptCipherPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        decryptCipherArea.setColumns(20);
        decryptCipherArea.setLineWrap(true);
        decryptCipherArea.setRows(5);
        decryptCipherArea.setWrapStyleWord(true);
        decryptCipherArea.setMinimumSize(new java.awt.Dimension(100, 15));
        decryptCipherArea.setName(""); // NOI18N
        decryptCipherScrollPane.setViewportView(decryptCipherArea);

        decryptCipherPanel.add(decryptCipherScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 450, 130));

        decryptPanel.add(decryptCipherPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, 160));

        decryptPlainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Plaintext"));
        decryptPlainPanel.setPreferredSize(new java.awt.Dimension(470, 163));
        decryptPlainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        decryptPlainArea.setEditable(false);
        decryptPlainArea.setColumns(20);
        decryptPlainArea.setLineWrap(true);
        decryptPlainArea.setRows(5);
        decryptPlainArea.setWrapStyleWord(true);
        decryptPlainArea.setName(""); // NOI18N
        decryptPlainScrollPane.setViewportView(decryptPlainArea);

        decryptPlainPanel.add(decryptPlainScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 450, 130));

        decryptPanel.add(decryptPlainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, 160));

        decryptClearButton.setText("Clear");
        decryptClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptClearButtonActionPerformed(evt);
            }
        });
        decryptPanel.add(decryptClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        decryptDecryptButton.setText("Decrypt");
        decryptDecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptDecryptButtonActionPerformed(evt);
            }
        });
        decryptPanel.add(decryptDecryptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        cipherTabbedPane.addTab("Decryption", decryptPanel);

        javax.swing.GroupLayout cipherPanelLayout = new javax.swing.GroupLayout(cipherPanel);
        cipherPanel.setLayout(cipherPanelLayout);
        cipherPanelLayout.setHorizontalGroup(
            cipherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cipherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cipherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cipherTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cipherTitle)
                    .addGroup(cipherPanelLayout.createSequentialGroup()
                        .addComponent(shiftLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shiftSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        cipherPanelLayout.setVerticalGroup(
            cipherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cipherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cipherTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cipherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shiftLabel)
                    .addComponent(shiftSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cipherTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileMenu.setMnemonic('F');
        fileMenu.setText("File");

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.setToolTipText("Exit Application");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        cipherMenuBar.add(fileMenu);

        setJMenuBar(cipherMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cipherPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cipherPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Close the application when the exit menu item is clicked.
     * @param evt event triggering the application exit action
     */
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * Encrypt the plaintext, in response to the user clicking the encrypt button.
     * @param evt event triggering the encryption
     */
    private void encryptEncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptEncryptButtonActionPerformed
        int shift = (Integer) shiftSpinner.getValue();
        String plainText = encryptPlainArea.getText();
        caesarCipher.setShift(shift);
        encryptCipherArea.setText(caesarCipher.encipher(plainText));        
    }//GEN-LAST:event_encryptEncryptButtonActionPerformed

    /**
     * Clear the text areas in the encryption tab, in response to the user
     * clicking the clear button.
     * @param evt event triggering the clearing
     */
    private void encryptClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptClearButtonActionPerformed
        encryptPlainArea.setText("");
        encryptCipherArea.setText("");
    }//GEN-LAST:event_encryptClearButtonActionPerformed

    /**
     * Decrypt the ciphertext, in response to the user clicking the decrypt button.
     * @param evt event triggering the decryption
     */
    private void decryptDecryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptDecryptButtonActionPerformed
        int shift = (Integer) shiftSpinner.getValue();
        String cipherText = decryptCipherArea.getText();
        caesarCipher.setShift(shift);
        decryptPlainArea.setText(caesarCipher.decipher(cipherText));        
    }//GEN-LAST:event_decryptDecryptButtonActionPerformed

    /**
     * Clear the text areas in the decryption tab, in response to the user
     * clicking the clear button.
     * @param evt event triggering the clearing
     */
    private void decryptClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptClearButtonActionPerformed
        decryptPlainArea.setText("");
        decryptCipherArea.setText("");
    }//GEN-LAST:event_decryptClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
//                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CipherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CipherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CipherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CipherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                CipherFrame cipherFrame = new CipherFrame();
                cipherFrame.setTitle("A Simple Caesar Cipher");
                cipherFrame.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar cipherMenuBar;
    private javax.swing.JPanel cipherPanel;
    private javax.swing.JTabbedPane cipherTabbedPane;
    private javax.swing.JLabel cipherTitle;
    private javax.swing.JTextArea decryptCipherArea;
    private javax.swing.JPanel decryptCipherPanel;
    private javax.swing.JScrollPane decryptCipherScrollPane;
    private javax.swing.JButton decryptClearButton;
    private javax.swing.JButton decryptDecryptButton;
    private javax.swing.JPanel decryptPanel;
    private javax.swing.JTextArea decryptPlainArea;
    private javax.swing.JPanel decryptPlainPanel;
    private javax.swing.JScrollPane decryptPlainScrollPane;
    private javax.swing.JTextArea encryptCipherArea;
    private javax.swing.JPanel encryptCipherPanel;
    private javax.swing.JScrollPane encryptCipherScrollPane;
    private javax.swing.JButton encryptClearButton;
    private javax.swing.JButton encryptEncryptButton;
    private javax.swing.JPanel encryptPanel;
    private javax.swing.JTextArea encryptPlainArea;
    private javax.swing.JPanel encryptPlainPanel;
    private javax.swing.JScrollPane encryptPlainScrollPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel shiftLabel;
    private javax.swing.JSpinner shiftSpinner;
    // End of variables declaration//GEN-END:variables
}
